snippet :
${1:var} := ${2:value}
endsnippet

snippet err!
if err != nil {
	$1
}
endsnippet

snippet fatal
log.Fatalf("$1%s", err)
endsnippet

snippet func
func ${1:main}($2) $3{
	$4
}
endsnippet

snippet func(
func ($1) ${2:Name}(${3:args}) ${4:return}{
	$5
}
endsnippet

snippet iferr
if err := $1; err != nil {
	$2
}
endsnippet

snippet inter
type ${1:Name} interface {
	$2
}
endsnippet

snippet imp
import (
	"$1"
)
endsnippet

snippet map
${1:var} := map[${2:key type}]${3:value type}{$4}
endsnippet

snippet pack
package ${1:main}
endsnippet

snippet range
for ${1:var} := range ${2:iterable} {
	$3
}
endsnippet

snippet struct
type ${1:Name} struct {
	$2
}
endsnippet

snippet test
func Test${1:name}(t *testing.T) {
  // arrange
  expected := "true"
  // act
  actual := "false"
  // assert
  if actual != expected {
    t.Fatalf("actual %q expected %q", actual, expected)
  }
}
endsnippet
